{"version":3,"sources":["redux/reducers/todo.js","components/EditableCell.js","components/TodoInput.js","components/TodoList.js","redux/reducers/pomodoro.js","components/PomodoroTimer.js","components/PomodoroControl.js","components/AboutPomodoro.js","components/AboutApp.js","App.js","serviceWorker.js","index.js"],"names":["initialState","todos","id","generateUUID","content","fulfilled","types","actions","addTodo","type","fulfillTodo","todoID","unfulfillTodo","deleteTodo","editTodo","reducer","state","action","map","item","filter","d","Date","getTime","window","performance","now","replace","c","r","Math","random","floor","toString","EditableContext","React","createContext","EditableFormRow","Form","create","form","props","index","Provider","value","EditableCell","editing","toggleEdit","setState","input","focus","save","e","record","handleSave","validateFields","error","values","currentTarget","renderCell","children","dataIndex","title","Item","style","margin","getFieldDecorator","rules","required","message","initialValue","ref","node","onPressEnter","onBlur","className","paddingRight","onClick","this","editable","restProps","Consumer","Component","TodoInput","handleSaveTodo","length","onSaveTodo","setValue","span","textAlign","placeholder","icon","shape","TodoList","handleAddTodo","handleToggleFulfillTodo","handleDeleteTodo","handleEditTodo","columns","key","onCell","width","render","text","size","placement","okText","cancelText","onConfirm","bind","rowSelection","onSelect","selected","selectedRowKeys","o","components","body","row","cell","scroll","y","borderWidth","borderColor","borderStyle","showHeader","rowKey","rowClassName","dataSource","footer","connect","todo","dispatch","bindActionCreators","todoActions","workTimer","shortBreak","longBreak","completedRings","inBreak","inPause","startTimer","pauseTimer","completeTimer","Countdown","Statistic","PomodoroTimer","handleOnFinish","Notification","permission","requestPermission","status","notification","requireInteraction","setTimeout","close","deadline","interval","timer","stopTimer","nextProps","nextState","height","animConfig","opacity","translateX","class","onFinish","format","pomodoro","pomodoroActions","PomodoroControl","handleToggleTimerTodo","AboutPomodoro","AboutApp","href","Footer","Layout","Sider","Content","App","aboutPomodoroVisible","aboutAppVisible","showAboutPomodoroModal","showAboutAppModal","handleModelCancel","padding","overflow","background","centered","visible","onCancel","okButtonProps","hidden","cancelButtonProps","Boolean","location","hostname","match","combineReducers","store","createStore","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"wdAAMA,EAAe,CACjBC,MAAO,CACH,CACIC,GAAIC,IACJC,QAAS,mDACTC,WAAW,GAEf,CACIH,GAAIC,IACJC,QAAS,oJACTC,WAAW,GAEf,CACIH,GAAIC,IACJC,QAAS,+DACTC,WAAW,GAEf,CACIH,GAAIC,IACJC,QAAS,2EACTC,WAAW,GAEf,CACIH,GAAIC,IACJC,QAAS,2KACTC,WAAW,GAEf,CACIH,GAAIC,IACJC,QAAS,+GACTC,WAAW,GAEf,CACIH,GAAIC,IACJC,QAAS,6IACTC,WAAW,KAKVC,EACC,WADDA,EAEK,eAFLA,EAGO,iBAHPA,EAII,cAJJA,EAKE,YAGFC,EAAU,CACnBC,QAAS,SAAAJ,GAAO,MAAK,CACjBK,KAAMH,EACNF,QAASA,IAEbM,YAAa,SAAAR,GAAE,MAAK,CAChBO,KAAMH,EACNK,OAAQT,IAEZU,cAAe,SAAAV,GAAE,MAAK,CAClBO,KAAMH,EACNK,OAAQT,IAEZW,WAAY,SAAAX,GAAE,MAAK,CACfO,KAAMH,EACNK,OAAQT,IAEZY,SAAU,SAACZ,EAAIE,GAAL,MAAkB,CACxBK,KAAMH,EACNK,OAAQT,EACRE,QAASA,KAkDFW,EA9CC,WAAmC,IAAlCC,EAAiC,uDAAzBhB,EAAciB,EAAW,uCAE9C,OAAQA,EAAOR,MACX,KAAKH,EACD,MAAO,CACHL,MAAM,GAAD,mBAAMe,EAAMf,OAAZ,CACL,CACIC,GAAIC,IACJC,QAASa,EAAOb,QAChBC,WAAW,MAGvB,KAAKC,EACD,MAAO,CACHL,MAAM,YAAKe,EAAMf,MAAMiB,IAAI,SAAAC,GAIvB,OAHIA,EAAKjB,KAAOe,EAAON,SACnBQ,EAAKd,WAAY,GAEdc,MAGnB,KAAKb,EACD,MAAO,CACHL,MAAM,YAAKe,EAAMf,MAAMiB,IAAI,SAAAC,GAIvB,OAHIA,EAAKjB,KAAOe,EAAON,SACnBQ,EAAKd,WAAY,GAEdc,MAGnB,KAAKb,EACD,MAAO,CAAEL,MAAM,YAAKe,EAAMf,MAAMmB,OAAO,SAAAD,GAAI,OAAIA,EAAKjB,KAAOe,EAAON,WACtE,KAAKL,EACD,MAAO,CACHL,MAAM,YAAKe,EAAMf,MAAMiB,IAAI,SAAAC,GAIvB,OAHIA,EAAKjB,KAAOe,EAAON,SACnBQ,EAAKf,QAAUa,EAAOb,SAEnBe,MAGnB,QACI,OAAOH,IAMnB,SAASb,IACL,IAAIkB,GAAI,IAAIC,MAAOC,UASnB,OARIC,OAAOC,aAAiD,oBAA3BD,OAAOC,YAAYC,MAChDL,GAAKI,YAAYC,OAEV,uCAAuCC,QAAQ,QAAS,SAAUC,GACzE,IAAIC,GAAKR,EAAoB,GAAhBS,KAAKC,UAAiB,GAAK,EAExC,OADAV,EAAIS,KAAKE,MAAMX,EAAI,KACN,KAALO,EAAWC,EAAS,EAAJA,EAAU,GAAMI,SAAS,M,2PC7HzD,IAAMC,EAAkBC,IAAMC,gBAQxBC,EAAkBC,IAAKC,QAALD,CANJ,SAAC,GAAD,IAAGE,EAAH,EAAGA,KAAgBC,GAAnB,EAASC,MAAT,wCAChB,kBAACR,EAAgBS,SAAjB,CAA0BC,MAAOJ,GAC7B,uBAAQC,MAMVI,E,2MACF7B,MAAQ,CACJ8B,SAAS,G,EAGbC,WAAa,WACT,IAAMD,GAAW,EAAK9B,MAAM8B,QAC5B,EAAKE,SAAS,CAAEF,WAAW,WACnBA,GACA,EAAKG,MAAMC,W,EAKvBC,KAAO,SAAAC,GAAM,IAAD,EACuB,EAAKX,MAA5BY,EADA,EACAA,OAAQC,EADR,EACQA,WAChB,EAAKd,KAAKe,eAAe,SAACC,EAAOC,GACzBD,GAASA,EAAMJ,EAAEM,cAAcxD,MAGnC,EAAK6C,aACLO,E,qVAAW,CAAD,GAAMD,EAAN,GAAiBI,Q,EAInCE,WAAa,SAAAnB,GACT,EAAKA,KAAOA,EADK,MAE8B,EAAKC,MAA5CmB,EAFS,EAETA,SAAUC,EAFD,EAECA,UAAWR,EAFZ,EAEYA,OAAQS,EAFpB,EAEoBA,MAErC,OADoB,EAAK9C,MAAjB8B,QAEJ,kBAAC,IAAKiB,KAAN,CAAWC,MAAO,CAAEC,OAAQ,IACvBzB,EAAK0B,kBAAkBL,EAAW,CAC/BM,MAAO,CACH,CACIC,UAAU,EACVC,QAAQ,GAAD,OAAKP,EAAL,8BAGfQ,aAAcjB,EAAOQ,IAPxBrB,CAQE,kBAAC,IAAD,CAAO+B,IAAK,SAAAC,GAAI,OAAK,EAAKvB,MAAQuB,GAAOC,aAAc,EAAKtB,KAAMuB,OAAQ,EAAKvB,SAGlF,yBACIwB,UAAU,2BACVX,MAAO,CAAEY,aAAc,IACvBC,QAAS,EAAK9B,YACbM,EAAOhD,UAAY,6BAAMuD,GAAkBA,I,wEAKlD,IAAD,EAUDkB,KAAKrC,MARLsC,EAFC,EAEDA,SAMAnB,GARC,EAGDC,UAHC,EAIDC,MAJC,EAKDT,OALC,EAMDX,MANC,EAODY,WAPC,EAQDM,UACGoB,EATF,yFAWL,OACI,uBAAQA,EACHD,EACG,kBAAC7C,EAAgB+C,SAAjB,KAA2BH,KAAKnB,YAE5BC,O,GAnEGzB,IAAM+C,WCclBC,G,mBAvBX,WAAY1C,GAAQ,IAAD,8BACf,4CAAMA,KAEV2C,eAAiB,SAAAhC,GACT,EAAKH,MAAMjC,MAAM4B,OAAS,EAAKK,MAAMjC,MAAM4B,MAAMyC,OAAS,IAC1D,EAAK5C,MAAM6C,WAAW,EAAKrC,MAAMjC,MAAM4B,OACvC,EAAKK,MAAMsC,SAAS,QANT,E,sEAUT,IAAD,OACL,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAKC,KAAM,GAAIxB,MAAO,CAAEyB,UAAW,WAC/B,kBAAC,IAAD,CAAOC,YAAY,uCAASnB,IAAK,SAAAC,GAAI,OAAK,EAAKvB,MAAQuB,GAAOC,aAAcK,KAAKM,eAAgBV,OAAQI,KAAKM,kBAElH,kBAAC,IAAD,CAAKI,KAAM,EAAGxB,MAAO,CAAEyB,UAAW,UAC9B,kBAAC,IAAD,CAAQE,KAAK,OAAOC,MAAM,SAASf,QAASC,KAAKM,uB,GAlB7CF,c,ujBCMlBW,E,YACF,WAAYpD,GAAQ,IAAD,8BACf,4CAAMA,KAkCVqD,cAAgB,SAAA1F,GACZ,EAAKqC,MAAMjC,QAAQJ,IApCJ,EAuCnB2F,wBAA0B,SAAC7F,EAAIG,GAC3BA,EAAY,EAAKoC,MAAM/B,YAAYR,GAAM,EAAKuC,MAAM7B,cAAcV,IAxCnD,EA2CnB8F,iBAAmB,SAAA9F,GACf,EAAKuC,MAAM5B,WAAWX,IA5CP,EA+CnB+F,eAAiB,SAAC9E,GACd,EAAKsB,MAAM3B,SAASK,EAAKjB,GAAIiB,EAAKf,UA9ClC,EAAK8F,QAAU,CACX,CACIpC,MAAO,QACPD,UAAW,UACXsC,IAAK,UACLpB,UAAU,EACVqB,OAAQ,SAAA/C,GAAM,MAAK,CACfA,SACA0B,UAAU,EACVjB,MAAO,2BACPD,UAAW,UACXP,WAAY,EAAK2C,kBAGzB,CACIpC,UAAW,YACXwC,MAAO,MACPC,OAAQ,SAACC,EAAMpF,GAAP,OACJA,EAAKd,UACD,kBAAC,IAAD,CAAQmG,KAAK,QAAQ/F,KAAK,SAASkF,KAAK,SAASC,MAAM,SAASf,QAAS,kBAAM,EAAKmB,iBAAiB7E,EAAKjB,OAEtG,kBAAC,IAAD,CACI4D,MAAM,4EACN2C,UAAU,UACVC,OAAO,eACPC,WAAW,eAAKC,UAAW,kBAAM,EAAKZ,iBAAiB7E,EAAKjB,MAC5D,kBAAC,IAAD,CAAQsG,KAAK,QAAQ/F,KAAK,SAASkF,KAAK,SAASC,MAAM,eAK/E,EAAKE,cAAc,EAAKA,cAAce,KAAnB,gBAjCJ,E,sEAmDT,IAAD,OACG5G,EAAU6E,KAAKrC,MAAfxC,MAGF6G,EAAe,CACjBC,SAAU,SAAC1D,EAAQ2D,GACf,EAAKjB,wBAAwB1C,EAAOnD,GAAI8G,IAG5CC,gBANehH,EAAMmB,OAAO,SAAAD,GAAI,OAAIA,EAAKd,YAAWa,IAAI,SAAAgG,GAAC,OAAIA,EAAEhH,MAQ7DiH,EAAa,CACfC,KAAM,CACFC,IAAKhF,EACLiF,KAAMzE,IAGd,OACI,6BACI,yBAAKmB,MAAO,CAAEC,OAAO,GAAIwB,UAAW,SAChC,yDAEJ,kBAAC,IAAD,CACI8B,OAAQ,CAAEC,EAAG,QACbxD,MAAO,CAACyD,YAAa,kBAAkBC,YAAY,UAAWC,YAAY,SAC1EC,YAAY,EACZT,WAAYA,EACZU,OAAQ,SAAA1G,GAAI,OAAIA,EAAKjB,IACrB4G,aAAcA,EACdgB,aAAc,iBAAM,gBACpBC,WAAY9H,EACZiG,QAASpB,KAAKoB,QACd8B,OAAQ,kBAAM,kBAAC,EAAD,CAAW1C,WAAY,EAAKQ,wB,GApFvCZ,aAsGR+C,cAbS,SAACjH,EAAOyB,GAC5B,OAAO,KACAA,EADP,CAEIxC,MAAOe,EAAMkH,KAAKjI,SAIC,SAAAkI,GACvB,OAAO,KACAC,YAAmBC,EAAaF,KAI5BF,CAA6CpC,G,4jBC/G5D,IAAM7F,EAAe,CACjBsI,UAAW,KACXC,WAAY,IACZC,UAAW,IACXC,eAAgB,EAChBC,SAAS,EACTC,SAAS,GAGArI,EACI,cADJA,EAEI,cAFJA,EAGO,iBAGPC,EAAU,CACnBqI,WAAY,iBAAO,CACfnI,KAAMH,IAEVuI,WAAY,iBAAO,CACfpI,KAAMH,IAEVwI,cAAe,iBAAO,CAClBrI,KAAMH,KA4BCS,EAxBC,WAAmC,IAAlCC,EAAiC,uDAAzBhB,EAAciB,EAAW,uCAE9C,OAAQA,EAAOR,MACX,KAAKH,EACD,OAAO,KAAKU,EAAZ,CAAmB2H,SAAS,IAChC,KAAKrI,EAOL,KAAKA,EACD,OAAO,KACAU,EADP,CAEIyH,eAAgBzH,EAAM0H,UAAY1H,EAAMyH,eAAiBzH,EAAMyH,eAC/DE,SAAS,EACTD,SAAU1H,EAAM0H,UAExB,QACI,OAAO1H,I,8kBCvCX+H,GAAcC,IAAdD,UAEFE,G,YACF,WAAYxG,GAAQ,IAAD,8BACf,4CAAMA,KA2CVyG,eAAiB,WACb,IAAMR,EAAU,EAAKjG,MAAMiG,QAC3B,EAAKjG,MAAMoG,aACPrH,OAAO2H,cAA4C,WAA5BA,aAAaC,YACpCD,aAAaE,kBAAkB,SAAAC,GAC3B,GAAe,YAAXA,EAAsB,CACtB,IAAIC,EAAe,IAAIJ,aAAa,iCAAS,CACzC/B,KAAMsB,EAAU,uFAAmB,+DACnC/C,KAAM,gBACN6D,oBAAoB,IAExBC,WAAW,WACPF,EAAaG,SACd,SAvDf,EAAKC,SAAWrI,KAAKI,MAAQ,EAAKe,MAAM6F,UAAY,IACpD,EAAKsB,SAAW,EAAKnH,MAAM6F,UAHZ,E,iFAMfxD,KAAK+E,MAAMC,c,6CAGXhF,KAAK+E,MAAMC,c,4CAGOC,EAAWC,GAC7B,GAAID,EAAUrB,SAAW5D,KAAKrC,MAAMiG,QAAS,CACzC,IAAIkB,EAAW,EAYf,OATQA,EAFJG,EAAUrB,QACNqB,EAAUtB,eAAiB,IAAMsB,EAAUtB,eAAiB,GAAK,GAAK,EAC3DsB,EAAUvB,UAEVuB,EAAUxB,WAGdwB,EAAUzB,UAEzBxD,KAAK6E,SAAWrI,KAAKI,MAAQkI,EAAW,IACxC9E,KAAK8E,SAAWA,GACT,EACJ,OAAIG,EAAUpB,SAAW7D,KAAKrC,MAAMkG,UAClCoB,EAAUpB,UACX7D,KAAK6E,SAAWrI,KAAKI,MAAQoD,KAAK8E,WAC/B,K,2CAOP9E,KAAKrC,MAAMkG,QACX7D,KAAK+E,MAAMC,YAEXhF,KAAK+E,MAAMjB,e,+BAsBT,IAAD,OACL,OACI,6BACI,yBAAK5E,MAAO,CAAEiG,OAAQ,MAClB,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAKzE,KAAM,GAAIxB,MAAO,CAAEyB,UAAW,SAC/B,kBAAC,KAAD,CACIyE,WAAY,CACR,CAAEC,QAAS,CAAC,EAAG,GAAIC,WAAY,CAAC,EAAG,MACnC,CAAED,QAAS,CAAC,EAAG,GAAIC,WAAY,CAAC,IAAK,QAExCtF,KAAKrC,MAAMiG,QACR,KACE,yBAAKvC,IAAI,IAAIkE,MAAM,uBAAnB,aAGd,kBAAC,IAAD,CAAK7E,KAAM,GAAIxB,MAAO,CAAEyB,UAAW,UAC/B,kBAAC,KAAD,CACIyE,WAAY,CACR,CAAEC,QAAS,CAAC,EAAG,GAAIC,WAAY,CAAC,GAAI,MACpC,CAAED,QAAS,CAAC,EAAG,GAAIC,WAAY,EAAE,KAAM,QAE1CtF,KAAKrC,MAAMiG,QACR,yBAAKvC,IAAI,IAAIkE,MAAM,wBAAnB,gBACE,SAKtB,kBAACtB,GAAD,CAAW5C,IAAI,IAAI5B,IAAK,SAAAC,GAAI,OAAK,EAAKqF,MAAQrF,GAAO8F,SAAUxF,KAAKoE,eAAgBtG,MAAOkC,KAAK6E,SAAUY,OAAO,e,GA5FrGrF,aA+Gb+C,eAbS,SAACjH,EAAOyB,GAC5B,OAAO,MACAA,EADP,GAEOzB,EAAMwJ,WAIU,SAAArC,GACvB,OAAO,MACAC,YAAmBqC,EAAiBtC,KAIhCF,CAA6CgB,I,2jBCnHtDyB,G,YACF,WAAYjI,GAAQ,IAAD,8BACf,4CAAMA,KAEVkI,sBAAwB,WACpB,EAAKlI,MAAMkG,QAAU,EAAKlG,MAAMmG,aAAe,EAAKnG,MAAMoG,cAJ3C,E,sEAOf,OACI,kBAAC,IAAD,CAAQrC,KAAK,QAAQ/F,KAAK,UAAUkF,KAAMb,KAAKrC,MAAMkG,QAAU,cAAgB,QAAS/C,MAAM,QAAQf,QAASC,KAAK6F,uBAC/G7F,KAAKrC,MAAMkG,QAAU,eAAO,oB,GAVfzD,aA4Bf+C,eAbS,SAACjH,EAAOyB,GAC5B,OAAO,MACAA,EADP,GAEOzB,EAAMwJ,WAIU,SAAArC,GACvB,OAAO,MACAC,YAAmBqC,EAAiBtC,KAIhCF,CAA6CyC,ICV7CE,OAvBf,SAAuBnI,GACnB,OACI,6BACI,gVACA,iDACA,4BACI,wJACA,sHACA,wIACA,4PACA,4RACA,iHAEJ,0KACA,4BACI,6XACA,mUCLDoI,OAXf,SAAkBpI,GACd,OACI,6BACI,iDACA,sDACA,uBAAGqI,KAAK,8BAAR,YCIJC,GAA2BC,IAA3BD,OAAQE,GAAmBD,IAAnBC,MAAOC,GAAYF,IAAZE,QAqERC,G,2MAnEbnK,MAAQ,CACNoK,sBAAsB,EACtBC,iBAAiB,G,EAGnBC,uBAAyB,WACvB,EAAKtI,SAAS,CACZoI,sBAAsB,K,EAG1BG,kBAAoB,WAClB,EAAKvI,SAAS,CACZqI,iBAAiB,K,EAGrBG,kBAAoB,SAAApI,GAClB,EAAKJ,SAAS,CACZoI,sBAAsB,EACtBC,iBAAiB,K,wEAKnB,OACE,kBAAC,IAAD,CAAQ1G,UAAU,OAChB,kBAAC,IAAD,KACE,kBAACuG,GAAD,CAASlH,MAAO,CAAEyH,QAAS,GAAIxH,OAAQ,GAAIyH,SAAU,UAAWC,WAAY,OAAQ1B,OAAQ,iBAAkBxE,UAAW,WACvH,kBAAC,GAAD,OAEF,kBAACsF,GAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKvF,KAAM,GAAIxB,MAAO,CAAEyB,UAAW,SACjC,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAKD,KAAM,GAAIxB,MAAO,CAAEyB,UAAW,UACjC,kBAAC,IAAD,CAAQhF,KAAK,OAAOoE,QAASC,KAAKwG,wBAAlC,oDACA,kBAAC,IAAD,CACEM,UAAQ,EACR9H,MAAM,mDACN+H,QAAS/G,KAAK9D,MAAMoK,qBACpBU,SAAUhH,KAAK0G,kBACfO,cAAe,CAAEC,QAAQ,GACzBC,kBAAmB,CAAED,QAAQ,IAC7B,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAQvL,KAAK,OAAOoE,QAASC,KAAKyG,mBAAlC,yBACA,kBAAC,IAAD,CACEK,UAAQ,EACR9H,MAAM,wBACN+H,QAAS/G,KAAK9D,MAAMqK,gBACpBS,SAAUhH,KAAK0G,kBACfO,cAAe,CAAEC,QAAQ,GACzBC,kBAAmB,CAAED,QAAQ,IAC7B,kBAAC,GAAD,WAMV,kBAACf,GAAD,CAAO5E,MAAM,MAAMrC,MAAO,CAAE2H,WAAY,SACtC,kBAAC,EAAD,Y,GA7DQzG,aCCEgH,QACW,cAA7B1K,OAAO2K,SAASC,UAEe,UAA7B5K,OAAO2K,SAASC,UAEhB5K,OAAO2K,SAASC,SAASC,MACvB,2DCRN,IAAMtL,GAAUuL,YAAgB,CAC5B9B,WACAtC,SAEEqE,GAAQC,YAAYzL,IAE1B0L,IAASnG,OACL,kBAAC,IAAD,CAAUiG,MAAOA,IACb,kBAAC,GAAD,OAEJG,SAASC,eAAe,SD6GtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.234b712e.chunk.js","sourcesContent":["const initialState = {\r\n    todos: [\r\n        {\r\n            id: generateUUID(),\r\n            content: \"这是一条示例待办\",\r\n            fulfilled: false\r\n        },\r\n        {\r\n            id: generateUUID(),\r\n            content: \"勾选/取消勾选左侧选择框，可以更改该待办的完成状态\",\r\n            fulfilled: false\r\n        },\r\n        {\r\n            id: generateUUID(),\r\n            content: \"点击待办内容可以编辑\",\r\n            fulfilled: false\r\n        },\r\n        {\r\n            id: generateUUID(),\r\n            content: \"这是一条已完成的示例待办\",\r\n            fulfilled: true\r\n        },\r\n        {\r\n            id: generateUUID(),\r\n            content: \"已完成的可以直接点击右侧删除，未完成的删除前需要二次确认\",\r\n            fulfilled: false\r\n        },\r\n        {\r\n            id: generateUUID(),\r\n            content: \"在下面的输入框输入待办内容添加新待办\",\r\n            fulfilled: false\r\n        },\r\n        {\r\n            id: generateUUID(),\r\n            content: \"暂无保存功能，所以请勿刷新界面，将导致数据丢失\",\r\n            fulfilled: false\r\n        },\r\n    ]\r\n};\r\n\r\nexport const types = {\r\n    ADD_TODO: \"ADD_TODO\",\r\n    FULFILL_TODO: \"FULFILL_TODO\",\r\n    UNFULFILL_TODO: \"UNFULFILL_TODO\",\r\n    DELETE_TODO: \"DELETE_TODO\",\r\n    EDIT_TODO: \"EDIT_TODO\"\r\n};\r\n\r\nexport const actions = {\r\n    addTodo: content => ({\r\n        type: types.ADD_TODO,\r\n        content: content\r\n    }),\r\n    fulfillTodo: id => ({\r\n        type: types.FULFILL_TODO,\r\n        todoID: id\r\n    }),\r\n    unfulfillTodo: id => ({\r\n        type: types.UNFULFILL_TODO,\r\n        todoID: id\r\n    }),\r\n    deleteTodo: id => ({\r\n        type: types.DELETE_TODO,\r\n        todoID: id\r\n    }),\r\n    editTodo: (id, content) => ({\r\n        type: types.EDIT_TODO,\r\n        todoID: id,\r\n        content: content\r\n    })\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    //console.log(\"action \" + JSON.stringify(action));\r\n    switch (action.type) {\r\n        case types.ADD_TODO:\r\n            return {\r\n                todos: [...state.todos,\r\n                {\r\n                    id: generateUUID(),\r\n                    content: action.content,\r\n                    fulfilled: false\r\n                }]\r\n            };\r\n        case types.FULFILL_TODO:\r\n            return {\r\n                todos: [...state.todos.map(item => {\r\n                    if (item.id === action.todoID) {\r\n                        item.fulfilled = true;\r\n                    }\r\n                    return item;\r\n                })]\r\n            };\r\n        case types.UNFULFILL_TODO:\r\n            return {\r\n                todos: [...state.todos.map(item => {\r\n                    if (item.id === action.todoID) {\r\n                        item.fulfilled = false;\r\n                    }\r\n                    return item;\r\n                })]\r\n            };\r\n        case types.DELETE_TODO:\r\n            return { todos: [...state.todos.filter(item => item.id !== action.todoID)] };\r\n        case types.EDIT_TODO:\r\n            return {\r\n                todos: [...state.todos.map(item => {\r\n                    if (item.id === action.todoID) {\r\n                        item.content = action.content;\r\n                    }\r\n                    return item;\r\n                })]\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;\r\n\r\nfunction generateUUID() {\r\n    var d = new Date().getTime();\r\n    if (window.performance && typeof window.performance.now === \"function\") {\r\n        d += performance.now();\r\n    }\r\n    var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n        var r = (d + Math.random() * 16) % 16 | 0;\r\n        d = Math.floor(d / 16);\r\n        return (c == 'x' ? r : (r & 0x3 | 0x8)).toString(16);\r\n    });\r\n    return uuid;\r\n}","import React, { Component } from 'react';\r\nimport { Input, Form } from 'antd';\r\n\r\nconst EditableContext = React.createContext();\r\n\r\nconst EditableRow = ({ form, index, ...props }) => (\r\n    <EditableContext.Provider value={form}>\r\n        <tr {...props} />\r\n    </EditableContext.Provider>\r\n);\r\n\r\nconst EditableFormRow = Form.create()(EditableRow);\r\n\r\nclass EditableCell extends React.Component {\r\n    state = {\r\n        editing: false,\r\n    };\r\n\r\n    toggleEdit = () => {\r\n        const editing = !this.state.editing;\r\n        this.setState({ editing }, () => {\r\n            if (editing) {\r\n                this.input.focus();\r\n            }\r\n        });\r\n    };\r\n\r\n    save = e => {\r\n        const { record, handleSave } = this.props;\r\n        this.form.validateFields((error, values) => {\r\n            if (error && error[e.currentTarget.id]) {\r\n                return;\r\n            }\r\n            this.toggleEdit();\r\n            handleSave({ ...record, ...values });\r\n        });\r\n    };\r\n\r\n    renderCell = form => {\r\n        this.form = form;\r\n        const { children, dataIndex, record, title } = this.props;\r\n        const { editing } = this.state;\r\n        return editing ? (\r\n            <Form.Item style={{ margin: 0 }}>\r\n                {form.getFieldDecorator(dataIndex, {\r\n                    rules: [\r\n                        {\r\n                            required: true,\r\n                            message: `${title}不能为空`,\r\n                        },\r\n                    ],\r\n                    initialValue: record[dataIndex],\r\n                })(<Input ref={node => (this.input = node)} onPressEnter={this.save} onBlur={this.save} />)}\r\n            </Form.Item>\r\n        ) : (\r\n                <div\r\n                    className=\"editable-cell-value-wrap\"\r\n                    style={{ paddingRight: 24 }}\r\n                    onClick={this.toggleEdit}>\r\n                    {record.fulfilled ? <del>{children}</del> : children}\r\n                </div>\r\n            );\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            editable,\r\n            dataIndex,\r\n            title,\r\n            record,\r\n            index,\r\n            handleSave,\r\n            children,\r\n            ...restProps\r\n        } = this.props;\r\n        return (\r\n            <td {...restProps}>\r\n                {editable ? (\r\n                    <EditableContext.Consumer>{this.renderCell}</EditableContext.Consumer>\r\n                ) : (\r\n                        children\r\n                    )}\r\n            </td>\r\n        );\r\n    }\r\n}\r\n\r\nexport { EditableFormRow, EditableCell }","import React, { Component } from 'react';\r\nimport { Input, Button, Row, Col } from 'antd';\r\n\r\nclass TodoInput extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    handleSaveTodo = e => {\r\n        if (this.input.state.value && this.input.state.value.length > 0) {\r\n            this.props.onSaveTodo(this.input.state.value);\r\n            this.input.setValue(null);\r\n        }\r\n\r\n    };\r\n    render() {\r\n        return (\r\n            <Row>\r\n                <Col span={21} style={{ textAlign: 'center' }} >\r\n                    <Input placeholder=\"键入待办内容\" ref={node => (this.input = node)} onPressEnter={this.handleSaveTodo} onBlur={this.handleSaveTodo} />\r\n                </Col>\r\n                <Col span={3} style={{ textAlign: 'right' }} >\r\n                    <Button icon=\"plus\" shape=\"circle\" onClick={this.handleSaveTodo} />\r\n                </Col>\r\n            </Row>\r\n        );\r\n    }\r\n}\r\nexport default TodoInput;","import React, { Component } from 'react';\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { Table, Button, Popconfirm } from 'antd';\r\nimport { actions as todoActions } from \"../redux/reducers/todo\";\r\nimport { EditableFormRow, EditableCell } from \"./EditableCell\"\r\nimport './TodoList.css';\r\nimport TodoInput from './TodoInput'\r\n\r\nclass TodoList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.columns = [\r\n            {\r\n                title: 'To-Do',\r\n                dataIndex: 'content',\r\n                key: 'content',\r\n                editable: true,\r\n                onCell: record => ({\r\n                    record,\r\n                    editable: true,\r\n                    title: '待办内容',\r\n                    dataIndex: 'content',\r\n                    handleSave: this.handleEditTodo,\r\n                }),\r\n            },\r\n            {\r\n                dataIndex: 'operation',\r\n                width: '10%',\r\n                render: (text, item) =>\r\n                    item.fulfilled ?\r\n                        <Button size=\"small\" type=\"danger\" icon=\"delete\" shape=\"circle\" onClick={() => this.handleDeleteTodo(item.id)} />\r\n                        : (\r\n                            <Popconfirm\r\n                                title=\"该待办尚未完成，确认删除?\"\r\n                                placement=\"leftTop\"\r\n                                okText=\"删除\"\r\n                                cancelText=\"取消\" onConfirm={() => this.handleDeleteTodo(item.id)}>\r\n                                <Button size=\"small\" type=\"danger\" icon=\"delete\" shape=\"circle\" />\r\n                            </Popconfirm>\r\n                        )\r\n            },\r\n        ];\r\n        this.handleAddTodo=this.handleAddTodo.bind(this);\r\n    }\r\n    handleAddTodo = content => {\r\n        this.props.addTodo(content);\r\n    };\r\n\r\n    handleToggleFulfillTodo = (id, fulfilled) => {\r\n        fulfilled ? this.props.fulfillTodo(id) : this.props.unfulfillTodo(id);\r\n    };\r\n\r\n    handleDeleteTodo = id => {\r\n        this.props.deleteTodo(id);\r\n    };\r\n\r\n    handleEditTodo = (item) => {\r\n        this.props.editTodo(item.id, item.content);\r\n    };\r\n\r\n    render() {\r\n        const { todos } = this.props;\r\n\r\n        let selectedKeys = todos.filter(item => item.fulfilled).map(o => o.id);\r\n        const rowSelection = {\r\n            onSelect: (record, selected) => {\r\n                this.handleToggleFulfillTodo(record.id, selected);\r\n\r\n            },\r\n            selectedRowKeys: selectedKeys\r\n        };\r\n        const components = {\r\n            body: {\r\n                row: EditableFormRow,\r\n                cell: EditableCell,\r\n            },\r\n        };\r\n        return (\r\n            <div>\r\n                <div style={{ margin:20, textAlign: 'left' }}>\r\n                    <h2>今日待办</h2>\r\n                </div>\r\n                <Table\r\n                    scroll={{ y: '64vh' }}\r\n                    style={{borderWidth: '1px 0px 0px 0px',borderColor:'#e8e8e8', borderStyle:'solid'}}\r\n                    showHeader={false}\r\n                    components={components}\r\n                    rowKey={item => item.id}\r\n                    rowSelection={rowSelection}\r\n                    rowClassName={() => 'editable-row'}\r\n                    dataSource={todos}\r\n                    columns={this.columns}\r\n                    footer={() => <TodoInput onSaveTodo={this.handleAddTodo}/>} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = (state, props) => {\r\n    return {\r\n        ...props,\r\n        todos: state.todo.todos\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        ...bindActionCreators(todoActions, dispatch)\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoList);","const initialState = {\r\n    workTimer: 25 * 60 * 1000,\r\n    shortBreak: 5 * 60 * 1000,\r\n    longBreak: 15 * 60 * 1000,\r\n    completedRings: 0,\r\n    inBreak: false,\r\n    inPause: true\r\n};\r\n\r\nexport const types = {\r\n    START_TIMER: \"START_TIMER\",\r\n    PAUSE_TIMER: \"PAUSE_TIMER\",\r\n    COMPLETE_TIMER: \"COMPLETE_TIMER\",\r\n};\r\n\r\nexport const actions = {\r\n    startTimer: () => ({\r\n        type: types.START_TIMER\r\n    }),\r\n    pauseTimer: () => ({\r\n        type: types.PAUSE_TIMER\r\n    }),\r\n    completeTimer: () => ({\r\n        type: types.COMPLETE_TIMER\r\n    })\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    //console.log(\"action \" + JSON.stringify(action));\r\n    switch (action.type) {\r\n        case types.START_TIMER:\r\n            return { ...state, inPause: false };\r\n        case types.PAUSE_TIMER:\r\n            return {\r\n                ...state,\r\n                completedRings: state.inBreak ? ++state.completedRings : state.completedRings,\r\n                inPause: true,\r\n                inBreak: !state.inBreak\r\n            };\r\n        case types.COMPLETE_TIMER:\r\n            return {\r\n                ...state,\r\n                completedRings: state.inBreak ? ++state.completedRings : state.completedRings,\r\n                inPause: true,\r\n                inBreak: !state.inBreak\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","import React, { Component } from 'react';\r\nimport { Statistic, Layout, Row, Col } from 'antd';\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { actions as pomodoroActions } from \"../redux/reducers/pomodoro\";\r\nimport './PomodoroTimer.css';\r\nimport QueueAnim from 'rc-queue-anim';\r\n\r\nconst { Countdown } = Statistic;\r\n\r\nclass PomodoroTimer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.deadline = Date.now() + this.props.workTimer + 500;\r\n        this.interval = this.props.workTimer;\r\n    }\r\n    componentDidMount() {\r\n        this.timer.stopTimer();\r\n    }\r\n    componentWillUnmount() {\r\n        this.timer.stopTimer();\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        if (nextProps.inBreak != this.props.inBreak) {\r\n            let interval = 0;\r\n            if (nextProps.inBreak) {\r\n                if (nextProps.completedRings > 0 && (nextProps.completedRings + 1) % 4 == 0) {\r\n                    interval = nextProps.longBreak;\r\n                } else {\r\n                    interval = nextProps.shortBreak;\r\n                }\r\n            } else {\r\n                interval = nextProps.workTimer;\r\n            }\r\n            this.deadline = Date.now() + interval + 500;\r\n            this.interval = interval;\r\n            return true;\r\n        } else if (nextProps.inPause != this.props.inPause) {\r\n            if (!nextProps.inPause)\r\n                this.deadline = Date.now() + this.interval;\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.inPause) {\r\n            this.timer.stopTimer();\r\n        } else {\r\n            this.timer.startTimer();\r\n        }\r\n    }\r\n\r\n    handleOnFinish = () => {\r\n        const inBreak = this.props.inBreak;\r\n        this.props.pauseTimer();\r\n        if (window.Notification && Notification.permission !== \"denied\") {\r\n            Notification.requestPermission(status => {\r\n                if (status === 'granted') {\r\n                    let notification = new Notification('时间到啦！', {\r\n                        body: inBreak ? '休息时间结束了，继续工作吧！' : '工作久了，休息一下！',\r\n                        icon: './logo512.png',\r\n                        requireInteraction: true\r\n                    });\r\n                    setTimeout(function () {\r\n                        notification.close();\r\n                    }, 8000);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div style={{ height: 200 }}>\r\n                    <Row>\r\n                        <Col span={10} style={{ textAlign: 'left' }} >\r\n                            <QueueAnim\r\n                                animConfig={[\r\n                                    { opacity: [1, 0], translateX: [0, 100] },\r\n                                    { opacity: [1, 0], translateX: [100, 200] }\r\n                                ]}>\r\n                                {this.props.inBreak ?\r\n                                    null\r\n                                    : <div key='a' class=\"pomodoro-title-left\">In Work</div>}\r\n                            </QueueAnim>\r\n                        </Col>\r\n                        <Col span={14} style={{ textAlign: 'right' }} >\r\n                            <QueueAnim\r\n                                animConfig={[\r\n                                    { opacity: [1, 0], translateX: [0, -100] },\r\n                                    { opacity: [1, 0], translateX: [-100, -200] }\r\n                                ]}>\r\n                                {this.props.inBreak ?\r\n                                    <div key='a' class=\"pomodoro-title-right\">Take a Break</div>\r\n                                    : null}\r\n                            </QueueAnim>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n                <Countdown key='a' ref={node => (this.timer = node)} onFinish={this.handleOnFinish} value={this.deadline} format=\"mm:ss\" />\r\n            </div>\r\n        );\r\n    };\r\n\r\n}\r\nconst mapStateToProps = (state, props) => {\r\n    return {\r\n        ...props,\r\n        ...state.pomodoro\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        ...bindActionCreators(pomodoroActions, dispatch)\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PomodoroTimer);","import React, { Component } from 'react';\r\nimport { Button } from 'antd';\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { actions as pomodoroActions } from \"../redux/reducers/pomodoro\";\r\n\r\nclass PomodoroControl extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    handleToggleTimerTodo = () => {\r\n        this.props.inPause ? this.props.startTimer() : this.props.pauseTimer();\r\n    };\r\n    render() {\r\n        return (\r\n            <Button size=\"large\" type=\"primary\" icon={this.props.inPause ? \"caret-right\" : \"pause\"} shape=\"round\" onClick={this.handleToggleTimerTodo} >\r\n                {this.props.inPause ? \"开始\" : \"暂停\"}\r\n            </Button>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = (state, props) => {\r\n    return {\r\n        ...props,\r\n        ...state.pomodoro\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        ...bindActionCreators(pomodoroActions, dispatch)\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PomodoroControl);","import React from 'react';\r\nfunction AboutPomodoro(props) {\r\n    return (\r\n        <div>\r\n            <p>番茄工作法是简单易行的时间管理方法，是由弗朗西斯科·西里洛于1992年创立的一种相对于GTD更微观的时间管理方法。</p>\r\n            <p>做法：</p>\r\n            <ol>\r\n                <li>每天开始的时候规划今天要完成的几项任务；</li>\r\n                <li>设定你的定时器，时间是25分钟；</li>\r\n                <li>开始完成第一项任务，直到25分钟结束；</li>\r\n                <li>停止工作，休息5分钟。25分钟的专注工作加5分钟的休息，这就是所谓的一个番茄钟；</li>\r\n                <li>开始下一个番茄钟，继续该任务。一直循环下去，直到完成该任务，并在列表里将该任务划掉；</li>\r\n                <li>每四个番茄钟后，休息15分钟。</li>\r\n            </ol>\r\n            <p>在某个番茄钟的过程里，如果突然想起要做什么事情:</p>\r\n            <ul>\r\n                <li>非得马上做不可的话，停止这个番茄钟并宣告它作废（哪怕还剩5分钟就结束了），去完成这件事情，之后再重新开始同一个番茄钟；</li>\r\n                <li>不是必须马上去做的话，将这件事记在另一个列表里（比如叫“计划外事件”），然后接着完成这个番茄钟。</li>\r\n            </ul>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default AboutPomodoro;","import React from 'react';\r\nfunction AboutApp(props) {\r\n    return (\r\n        <div>\r\n            <h3>番茄To-Do</h3>\r\n            <p>版本：0.1.0</p>\r\n            <a href=\"https://github.com/HHChaos\">Github</a>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default AboutApp;","import React, { Component } from 'react';\nimport './App.css';\nimport { Layout, Button, Row, Col, Modal } from 'antd';\nimport 'antd/dist/antd.css';\nimport TodoList from './components/TodoList'\nimport PomodoroTimer from './components/PomodoroTimer'\nimport PomodoroControl from './components/PomodoroControl'\nimport AboutPomodoro from './components/AboutPomodoro'\nimport AboutApp from './components/AboutApp'\n\nconst { Footer, Sider, Content } = Layout;\nclass App extends Component {\n  state = {\n    aboutPomodoroVisible: true,\n    aboutAppVisible: false,\n  };\n\n  showAboutPomodoroModal = () => {\n    this.setState({\n      aboutPomodoroVisible: true,\n    });\n  };\n  showAboutAppModal = () => {\n    this.setState({\n      aboutAppVisible: true,\n    });\n  };\n  handleModelCancel = e => {\n    this.setState({\n      aboutPomodoroVisible: false,\n      aboutAppVisible: false,\n    });\n  };\n\n  render() {\n    return (\n      <Layout className=\"App\">\n        <Layout>\n          <Content style={{ padding: 24, margin: 24, overflow: 'initial', background: '#fff', height: 'calc(100vh-48)', textAlign: 'center' }}>\n            <PomodoroTimer />\n          </Content>\n          <Footer>\n            <Row>\n              <Col span={12} style={{ textAlign: 'left' }} >\n                <PomodoroControl />\n              </Col>\n              <Col span={12} style={{ textAlign: 'right' }} >\n                <Button type=\"link\" onClick={this.showAboutPomodoroModal}>关于番茄钟工作法</Button>\n                <Modal\n                  centered\n                  title=\"关于番茄钟工作法\"\n                  visible={this.state.aboutPomodoroVisible}\n                  onCancel={this.handleModelCancel}\n                  okButtonProps={{ hidden: true }}\n                  cancelButtonProps={{ hidden: true }}>\n                  <AboutPomodoro/>\n                </Modal>\n                <Button type=\"link\" onClick={this.showAboutAppModal}>关于此App</Button>\n                <Modal\n                  centered\n                  title=\"关于此App\"\n                  visible={this.state.aboutAppVisible}\n                  onCancel={this.handleModelCancel}\n                  okButtonProps={{ hidden: true }}\n                  cancelButtonProps={{ hidden: true }}>\n                  <AboutApp/>\n                </Modal>\n              </Col>\n            </Row>\n          </Footer>\n        </Layout>\n        <Sider width=\"400\" style={{ background: '#fff' }}>\n          <TodoList />\n        </Sider>\n      </Layout >\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, combineReducers } from \"redux\";\nimport pomodoro from \"./redux/reducers/pomodoro\";\nimport todo from \"./redux/reducers/todo\";\nimport { Provider } from \"react-redux\";\n\nconst reducer = combineReducers({\n    pomodoro,\n    todo\n});\nconst store = createStore(reducer);\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}